- semesters.each do |semester|
  %h2= semester.fullname
  %table.table.table-bordered.table-condensed
    %tr
      %th{:rowspan => "2", style:"width:3%"} #
      %th{:rowspan => "2"} Imię
      %th{:rowspan => "2"} Nazwisko
      %th{:colspan => "5"} Frekwencja
      %th{:colspan => "8"} Oceny
    %tr
      %th %
      %th ob
      %th us
      %th nu
      %th sp
      %th Średnia
      %th 1
      %th 2
      %th 3
      %th 4
      %th 5
      %th 6
      %th nkl
    - required = justified = unexcused = late = 0
    - marks = [0,0,0,0,0,0]
    - students.each_with_index do |student, i|
      - absences = student.semester_absences(semester)
      - required += absences[:required]
      - justified += absences[:justified]
      - unexcused += absences[:unexcused]
      %tr
        %td= i+1
        %td= student.first_name
        %td= student.last_name
        %td= absence_percentage(absences[:required], absences[:justified], absences[:unexcused])
        %td= absences[:required]
        %td= absences[:justified]
        %td= absences[:unexcused]
        %td= absences[:late]
        %td= student.semester_average(semester)
        - 1.upto(6).each do |i|
          - count = student.count_semestral_marks(i, semester.id)
          - marks[i] =+ count
          %td= count
        %td= student.count_semestral_marks('nkl', semester.id)
    %tr
      %th{colspan:3} Razem
      %th= absence_percentage(required, justified, unexcused)
      %th= required
      %th= justified
      %th= unexcused
      %th= late
      %th= school_class.semester_average(semester)
      - 1.upto(6).each do |i|
        %th= marks[i]
